name: Test
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Security audit
        run: npm audit --audit-level=moderate
      - name: Clone test data
        run: |
          git clone https://${{ secrets.XWORD_PARSER_TESTDATA_PAT }}@github.com/mjkoo/xword-parser-testdata.git testdata
      - name: Check formatting
        run: npm run lint
      - name: Type check
        run: npm run typecheck
      - name: Run tests with coverage
        run: CI=true npm run test:coverage
      - name: Upload test results to Codecov
        if: ${{ !cancelled() && matrix.node-version == '22.x' }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./test-results.xml
          flags: unit-tests
          name: unit-test-results
      - name: Upload coverage to Codecov
        if: matrix.node-version == '22.x'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unit-tests
          name: unit-tests
          fail_ci_if_error: true
      - name: Run fuzz tests
        run: npm run test:fuzz
      - name: Upload fuzz test coverage to Codecov
        if: matrix.node-version == '22.x'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage-fuzz/lcov.info
          flags: fuzz-tests
          name: fuzz-tests
          fail_ci_if_error: true
