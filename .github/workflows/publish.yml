name: Publish Package

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish'
        required: true
        type: string

jobs:
  publish-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Verify version matches
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "Package: $PACKAGE_NAME@$PACKAGE_VERSION"
          
          if [ "$PACKAGE_VERSION" != "${{ github.event.inputs.version }}" ]; then
            echo "Error: package.json version ($PACKAGE_VERSION) doesn't match input version (${{ github.event.inputs.version }})"
            exit 1
          fi
      
      - name: Check if version already published
        id: check
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          if npm view "$PACKAGE_NAME@${{ github.event.inputs.version }}" version 2>/dev/null; then
            echo "❌ Error: Version ${{ github.event.inputs.version }} is already published to npm"
            echo "exists=true" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ Version ${{ github.event.inputs.version }} is not yet published"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      
      - run: npm install
      - run: npm run build
      
      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: Release v${{ github.event.inputs.version }}
          body: |
            Release version ${{ github.event.inputs.version }}
            
            See [commit history](https://github.com/${{ github.repository }}/commits/main) for changes.
          draft: false
          prerelease: ${{ contains(github.event.inputs.version, '-') }}
      
      - name: Publish to npm with provenance
        run: npm publish --access public --provenance
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Verify publication
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          echo "⏳ Waiting for package to be available on npm..."
          sleep 10
          
          if npm view "$PACKAGE_NAME@${{ github.event.inputs.version }}" version; then
            echo "✅ Package $PACKAGE_NAME version ${{ github.event.inputs.version }} successfully published and verified!"
          else
            echo "⚠️ Package may not be immediately available. Check https://www.npmjs.com/package/$PACKAGE_NAME"
          fi